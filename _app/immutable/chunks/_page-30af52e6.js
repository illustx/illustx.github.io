const a={title:"Transfer SOL",home:!0,url:"https://explorer.solana.com/tx/4dQXB2Q35sTvyM5kpiMt4FiLNEjRvjdcS52tqPykVyCfH9tu9hBMGRpigfzqe1J6jvkaedvFAMtFafg3hcD2dq2e?cluster=devnet",items:[{name:"Signatures (array of)",docs:["A Solana transaction contains an array of signatures, followed by a message. Each signature is an Ed25519 digital signature of the message that follows.","The <strong>transaction id</strong> in Solana is the base58 encoding of the first signature."],items:[{name:"Signatures length",data:"01"},{name:"Signature #0",data:"b5721ba995a268f474e741b85d88760126248f8cc87e6b3274434b1f47fc987ebe4620fd02fcd3319c2dc4d8b7661f8e724323e9421d57b04f3f484e82aa4c0f",parsed:"4dQXB2Q35sTvyM5kpiMt4FiLNEjRvjdcS52tqPykVyCfH9tu9hBMGRpigfzqe1J6jvkaedvFAMtFafg3hcD2dq2e"}]},{name:"Message",docs:"The message contains a header, followed by an array of account addresses, followed by a recent blockhash, followed by an array of instructions.",items:[{name:"Message header",docs:"The message header contains three unsigned 8-bit values: the first is the number of required signatures in the transaction; the second is the number of those corresponding accounts that are read-only; the third is the number of read-only accounts not requiring signatures.",items:[{name:"Required signatures",data:"01"},{name:"Read-only accounts requiring signatures",data:"00"},{name:"Read-only accounts not requiring signatures",data:"01"}]},{name:"Accounts (array of)",docs:["Each account address is 32-byte long, displayed as its base58 encoding. Addresses that can sign transactions are Ed25519 public keys (unlike other blockchains, in Solana public keys are addresses, there's no hash involved).","The addresses that require signatures appear at the beginning of the array, with addresses requesting read+write access first, and read-only accounts following. The addresses that do not require signatures follow the addresses that do, again with read+write accounts first and read-only accounts following."],items:[{name:"Accounts length",data:"03"},{name:"Account #0: from (and signer)",data:"75e0116a58449fa5d7cf3412bdadfe3d9b671f36e026b4766da892caf2e982f9",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk",url:"https://explorer.solana.com/address/8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk?cluster=devnet"},{name:"Account #1: to (read+write)",data:"fc880863219008406235fa4c8fbb2a86d3da7b6762eac39323b2a1d8c404a414",parsed:"Hzn3n914JaSpnxo5mBbmuCDmGL6mxWN9Ac2HzEXFSGtb",url:"https://explorer.solana.com/address/Hzn3n914JaSpnxo5mBbmuCDmGL6mxWN9Ac2HzEXFSGtb?cluster=devnet"},{name:"Account #2: program (read-only)",data:"0000000000000000000000000000000000000000000000000000000000000000",parsed:"11111111111111111111111111111111",url:"https://explorer.solana.com/address/11111111111111111111111111111111?cluster=devnet"}]},{name:"Recent blockhash",items:[{hide:"Recent blockhash",data:"375c40dee24dc963536bb547a5d96729ad082e2710ed913b5a7749feffb9ba62"}]},{name:"Instructions (array of)",docs:["Each instruction contains a program id (reference to one of the transaction's accounts), a subset of accounts that's passed to the program, and additional instruction data.","The program interprets the data, operates on the accounts and can return successfully or with an error code. An error return causes the entire transaction to fail immediately."],items:[{name:"Instructions length",data:"01"},{name:"Instruction #0",info:["This is an example of system transfer, aka transfer of SOL.",'The program id <code>02</code> references the system program, that has a constant address <code class="parsed">111..111</code>.'],items:[{name:"Program id",data:"02",parsed:"11111111111111111111111111111111"},{name:"Accounts (array of)",items:[{name:"Accounts length",data:"02"},{name:"Account #0: from",data:"00",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk"},{name:"Account #1: to",data:"01",parsed:"Hzn3n914JaSpnxo5mBbmuCDmGL6mxWN9Ac2HzEXFSGtb"}]},{name:"Instruction data",info:["The instruction data is parsed by the program.",'The system program <code class="parsed">111..111</code> interprets the first 4 bytes as a little endian uint32 instruction id, in this case <code>02</code> is the <a href="https://github.com/solana-labs/solana/blob/v1.14.9/sdk/program/src/system_instruction.rs#L182-L187">Transfer</a> instruction.',"The Transfer instruction expects a uint64 parameter amount (the remaining data), and operates on 2 accounts, resp. sender and recipient, both read+write accounts.",'The amount is in Lamports, with 1 SOL = 10^9 Lamports, so this transaction transfers 0.2 SOL from <code class="parsed">8w8..Pxk</code> to <code class="parsed">Hzn..Gtb</code>.'],items:[{name:"Instruction data length",data:"0c",parsed:"12"},{name:"Param #0: instruction id (uint32)",data:"02000000",parsed:"0x02 = transfer"},{name:"Param #1: amount (uint64)",data:"00c2eb0b00000000",parsed:"200,000,000"}]}]}]}]}]},t={title:"Transfer USDC",url:"https://explorer.solana.com/tx/Q7n42yD8Jpc23FPJktAuHzfsikXE7QGJSTQFnpbuVaSjuD37ATvYbbVDSWE7a1Kw9K3xPQaLbU5Nna4ajaDXfH2?cluster=devnet",items:[{name:"Signatures (array of)",docs:["A Solana transaction contains an array of signatures, followed by a message. Each signature is an Ed25519 digital signature of the message that follows.","The <strong>transaction id</strong> in Solana is the base58 encoding of the first signature."],items:[{name:"Signatures length",data:"01"},{name:"Signature #0",data:"13ef61cb75c32dce48c4cfc11999fea53778f588980d33a1a98273c7398f51bbaa44345c7ec47fc2f66527a7a34b9293a96e2833c243403e93d113e7bcf26809",parsed:"Q7n42yD8Jpc23FPJktAuHzfsikXE7QGJSTQFnpbuVaSjuD37ATvYbbVDSWE7a1Kw9K3xPQaLbU5Nna4ajaDXfH2"}]},{name:"Message",docs:"The message contains a header, followed by an array of account addresses, followed by a recent blockhash, followed by an array of instructions.",items:[{name:"Message header",docs:"The message header contains three unsigned 8-bit values: the first is the number of required signatures in the transaction; the second is the number of those corresponding accounts that are read-only; the third is the number of read-only accounts not requiring signatures.",items:[{name:"Required signatures",data:"01"},{name:"Read-only accounts requiring signatures",data:"00"},{name:"Read-only accounts not requiring signatures",data:"02"}]},{name:"Accounts (array of)",docs:["Each account address is 32-byte long, displayed as its base58 encoding. Addresses that can sign transactions are Ed25519 public keys (unlike other blockchains, in Solana public keys are addresses, there's no hash involved).","The addresses that require signatures appear at the beginning of the array, with addresses requesting read+write access first, and read-only accounts following. The addresses that do not require signatures follow the addresses that do, again with read+write accounts first and read-only accounts following."],info:["In Solana, a user holds a token into a dedicated account called the associated token account (ATA).",`The ATA address can be deterministically derived from the user's account address and the token mint address, for example the USDC (mint: <code class="parsed">4zM..cDU</code>) ATA for user <code class="parsed">8w8..Pxk</code> is <code class="parsed">784..UEk</code>.`,"Tokens are transfered from an ATA to an ATA, note that the recipient main address isn't part of the transaction."],items:[{name:"Accounts length",data:"05"},{name:"Account #0: from (and signer)",data:"75e0116a58449fa5d7cf3412bdadfe3d9b671f36e026b4766da892caf2e982f9",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk",url:"https://explorer.solana.com/address/8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk?cluster=devnet"},{name:"Account #1: from ATA (read+write)",data:"5af514acea43819de1c7e03962823d1da1e8f75e173cb413c7c1978c34ea5609",parsed:"784SipxQ9YhLvpHaWJATRKnccJ3sB9GeqCRnpi5MdUEk",url:"https://explorer.solana.com/address/784SipxQ9YhLvpHaWJATRKnccJ3sB9GeqCRnpi5MdUEk?cluster=devnet"},{name:"Account #2: to ATA (read+write)",data:"bffd0fa1f34582c787c5f7de3d3a40e3fb50ff51438aa7a5cfb9f96e740ac993",parsed:"DvSgNMRxVSMBpLp4hZeBrmQo8ZRFne72actTZ3PYE3AA",url:"https://explorer.solana.com/address/DvSgNMRxVSMBpLp4hZeBrmQo8ZRFne72actTZ3PYE3AA?cluster=devnet"},{name:"Account #3: token mint (read-only)",data:"3b442cb3912157f13a933d0134282d032b5ffecd01a2dbf1b7790608df002ea7",parsed:"4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU = USDC",url:"https://explorer.solana.com/address/4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU?cluster=devnet"},{name:"Account #4: token program (read-only)",data:"06ddf6e1d765a193d9cbe146ceeb79ac1cb485ed5f5b37913a8cf5857eff00a9",parsed:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA = USDC program",url:"https://explorer.solana.com/address/TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA?cluster=devnet"}]},{name:"Recent blockhash",items:[{hide:"Recent blockhash",data:"d4b2d802e32e4d7dcc99b7311b29803a6340760f4b86e57853f3ef465218101d"}]},{name:"Instructions (array of)",docs:["Each instruction contains a program id (reference to one of the transaction's accounts), a subset of accounts that's passed to the program, and additional instruction data.","The program interprets the data, operates on the accounts and can return successfully or with an error code. An error return causes the entire transaction to fail immediately."],items:[{name:"Instructions length",data:"01"},{name:"Instruction #0",info:["This is an example of SPL token transfer.",'The program id <code>04</code> references the token program <code class="parsed">Tokenkeg..5DA</code>, which is USDC on devnet.'],items:[{name:"Program id",data:"04",parsed:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{name:"Accounts (array of)",items:[{name:"Accounts length",data:"05"},{name:"Account #0: from ATA",data:"01",parsed:"784SipxQ9YhLvpHaWJATRKnccJ3sB9GeqCRnpi5MdUEk"},{name:"Account #1: token mint",data:"03",parsed:"USDC"},{name:"Account #2: to ATA",data:"02",parsed:"DvSgNMRxVSMBpLp4hZeBrmQo8ZRFne72actTZ3PYE3AA"},{name:"Account #3: owner = from",data:"00",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk"},{name:"Account #4: signer = from",data:"00",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk"}]},{name:"Instruction data",info:['The token program <code class="parsed">Tokenkeg..5DA</code> interprets the first byte as uint8 instruction id, in this case <code>0c</code> is the <a href="https://github.com/solana-labs/solana-program-library/blob/token-v3.5.0/token/program/src/instruction.rs#L247-L275">TransferChecked</a> instruction.',"The TransferChecked instruction expects 2 parameters: uint64 amount (little endian) and uint8 decimals, and operates on 5 accounts, resp. source ATA, token mint, destination ATA, owner and signers (mostly relevant for multi-sig).",'This transaction transfers 0.4 USDC from <code class="parsed">8w8..Pxk</code> to <code class="parsed">Hzn..Gtb</code>.'],items:[{name:"Instruction data length",data:"0a",parsed:"10"},{name:"Param #0: instruction id (uint32)",data:"0c",parsed:"0x0c = TransferChecked"},{name:"Param #1: amount (uint64)",data:"801a060000000000",parsed:"400,000"},{name:"Param #2: decimals (uint8)",data:"06"}]}]}]}]}]},n={title:"Transfer USDC + Create ATA",url:"https://explorer.solana.com/tx/4EPHJpdA7ykHwmpLpQq3Y3DJTQVCQKPx3Q1XCEJ28r7jsN6eU31ZUMPHpcwtKF5cs6QJMf6SHrApaMWDdn4tT5qu?cluster=devnet",items:[{name:"Signatures (array of)",docs:["A Solana transaction contains an array of signatures, followed by a message. Each signature is an Ed25519 digital signature of the message that follows.","The <strong>transaction id</strong> in Solana is the base58 encoding of the first signature."],items:[{name:"Signatures length",data:"01"},{name:"Signature #0",data:"a197cddbb70768e4f0bd41868054d6599b4d9e13b76fd3919ba5f55edd8ba65bae4d26bf1528050b931cfab21e2f86b8482e772917f1b5d419ebafd974309c04",parsed:"4EPHJpdA7ykHwmpLpQq3Y3DJTQVCQKPx3Q1XCEJ28r7jsN6eU31ZUMPHpcwtKF5cs6QJMf6SHrApaMWDdn4tT5qu"}]},{name:"Message",docs:"The message contains a header, followed by an array of account addresses, followed by a recent blockhash, followed by an array of instructions.",items:[{name:"Message header",docs:"The message header contains three unsigned 8-bit values: the first is the number of required signatures in the transaction; the second is the number of those corresponding accounts that are read-only; the third is the number of read-only accounts not requiring signatures.",items:[{name:"Required signatures",data:"01"},{name:"Read-only accounts requiring signatures",data:"00"},{name:"Read-only accounts not requiring signatures",data:"06"}]},{name:"Accounts (array of)",docs:["Each account address is 32-byte long, displayed as its base58 encoding. Addresses that can sign transactions are Ed25519 public keys (unlike other blockchains, in Solana public keys are addresses, there's no hash involved).","The addresses that require signatures appear at the beginning of the array, with addresses requesting read+write access first, and read-only accounts following. The addresses that do not require signatures follow the addresses that do, again with read+write accounts first and read-only accounts following."],items:[{name:"Accounts length",data:"09"},{name:"Account #0: from (and signer)",data:"75e0116a58449fa5d7cf3412bdadfe3d9b671f36e026b4766da892caf2e982f9",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk",url:"https://explorer.solana.com/address/8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk?cluster=devnet"},{name:"Account #1: to ATA",data:"ac0f3f58d1e479b5c029c8693be26c8dbf2d2ba895f5d4db2689bde0511b91a4",parsed:"CaecKTkZvvpiiwWziFsjFnfduXD6wTQh5GJNfqyTRUVZ",url:"https://explorer.solana.com/address/CaecKTkZvvpiiwWziFsjFnfduXD6wTQh5GJNfqyTRUVZ?cluster=devnet"},{name:"Account #2: from ATA",data:"5af514acea43819de1c7e03962823d1da1e8f75e173cb413c7c1978c34ea5609",parsed:"784SipxQ9YhLvpHaWJATRKnccJ3sB9GeqCRnpi5MdUEk"},{name:"Account #3: to (read-only)",data:"7eab6fd0874e740550e7af6d48693493d4f6827d52cf3b1652ab512b7aac4229",parsed:"9XTzPajr8q1ZNEnLcoxz4U7UYQCchxMDo8QntZ368KGL"},{name:"Account #4: token mint (read-only)",data:"3b442cb3912157f13a933d0134282d032b5ffecd01a2dbf1b7790608df002ea7",parsed:"4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU = USDC"},{name:"Account #5: system program (read-only)",data:"0000000000000000000000000000000000000000000000000000000000000000",parsed:"11111111111111111111111111111111"},{name:"Account #6: token program (read-only)",data:"06ddf6e1d765a193d9cbe146ceeb79ac1cb485ed5f5b37913a8cf5857eff00a9",parsed:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA = USDC program"},{name:"Account #7: system rent program (read-only)",data:"06a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a00000000",parsed:"SysvarRent111111111111111111111111111111111"},{name:"Account #8: ATA program (read-only)",data:"8c97258f4e2489f1bb3d1029148e0d830b5a1399daff1084048e7bd8dbe9f859",parsed:"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL = USDC ATA program"}]},{name:"Recent blockhash",items:[{hide:"Recent blockhash",data:"eefaf3773c22f5f1b79624d12e2ee6ba0af65d291e56d9188b9e1334f2f1d27c"}]},{name:"Instructions (array of)",docs:["Each instruction contains a program id (reference to one of the transaction's accounts), a subset of accounts that's passed to the program, and additional instruction data.","The program interprets the data, operates on the accounts and can return successfully or with an error code. An error return causes the entire transaction to fail immediately."],info:["This is an example of a transaction with 2 instructions: the first one to create an ATA, and the second one to transfer USDC to the ATA just created."],items:[{name:"Instructions length",data:"02"},{name:"Instruction #0",info:["This is an example of creating an ATA.",'The program id <code>08</code> references the ATA program <code class="parsed">ATokenGPv..knL</code>, which is the ATA program of USDC on devnet.'],items:[{name:"Program id",data:"08",parsed:"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{name:"Accounts (array of)",items:[{name:"Accounts length",data:"07"},{name:"Account #0: payer = from",data:"00",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk"},{name:"Account #1: ATA to create = to ATA",data:"01",parsed:"CaecKTkZvvpiiwWziFsjFnfduXD6wTQh5GJNfqyTRUVZ"},{name:"Account #2: user account = to",data:"03",parsed:"9XTzPajr8q1ZNEnLcoxz4U7UYQCchxMDo8QntZ368KGL"},{name:"Account #3: token mint",data:"04",parsed:"4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU"},{name:"Account #4: system program",data:"05",parsed:"11111111111111111111111111111111"},{name:"Account #5: token program",data:"06",parsed:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{name:"Account #6: to",data:"07",parsed:"SysvarRent111111111111111111111111111111111"}]},{name:"Instruction data",info:["The instruction data is empty.",'This implicitly refers to the first instruction: <a href="https://github.com/solana-labs/solana-program-library/blob/token-v3.5.0/associated-token-account/program/src/instruction.rs#L16-L25">Create</a>, that has no parameters but the input accounts.',"Note that the instruction requires 6 input accounts, while in this example we're passing 7: the last one gets ignored."],items:[{name:"Instruction data length",data:"00"}]}]},{name:"Instruction #1",info:['This second instruction is a SPL token transfer, identical to the one described in the <a href="/solana/transfer-usdc">previous example</a>, except for the account references.','In summary, the whole transaction first creates the USDC ATA for <code class="parsed">9XT..KGL</code> and then transfers 0.4 USDC from <code class="parsed">8w8..Pxk</code> to <code class="parsed">9XT..KGL</code>.'],items:[{name:"Program id",data:"06",parsed:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{name:"Accounts (array of)",items:[{name:"Accounts length",data:"05"},{name:"Account #0: from ATA",data:"02",parsed:"784SipxQ9YhLvpHaWJATRKnccJ3sB9GeqCRnpi5MdUEk"},{name:"Account #1: token mint",data:"04",parsed:"USDC"},{name:"Account #2: to ATA",data:"01",parsed:"CaecKTkZvvpiiwWziFsjFnfduXD6wTQh5GJNfqyTRUVZ"},{name:"Account #3: owner = from",data:"00",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk"},{name:"Account #4: signer = from",data:"00",parsed:"8w8sKQDnS55gHU2wmvntVwidW9Gcx7ZJwPeciRTBmPxk"}]},{name:"Instruction data",items:[{name:"Instruction data length",data:"0a",parsed:"10"},{name:"Param #0: instruction id (uint32)",data:"0c",parsed:"0x0c = TransferChecked"},{name:"Param #1: amount (uint64)",data:"801a060000000000",parsed:"400,000"},{name:"Param #2: decimals (uint8)",data:"06"}]}]}]}]}]};async function s({params:e}){switch(e.path.replace(/\/$/,"")){case"":case"solana/transfer-sol":return a;case"solana/transfer-usdc":return t;case"solana/transfer-usdc-2":return n;default:return}}const r=Object.freeze(Object.defineProperty({__proto__:null,load:s},Symbol.toStringTag,{value:"Module"}));export{r as _,s as l};
